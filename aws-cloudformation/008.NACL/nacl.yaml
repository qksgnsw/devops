Resources:
  NACLVPC:
    Type: AWS::EC2::VPC
    Properties:
     CidrBlock: 10.0.0.0/16
     EnableDnsSupport: true
     EnableDnsHostnames: true
     Tags:
        - Key: Name
          Value: NACL-VPC

  NACLIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: NACL-IGW

  NACLIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref NACLIGW
      VpcId: !Ref NACLVPC

  NACLPublicSN:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref NACLVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 10.0.0.0/24
      Tags:
        - Key: Name
          Value: NACL-Public-SN

  NACLPublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref NACLVPC
      Tags:
        - Key: Name
          Value: NACL-Public-RT

  NACLPublicSNRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref NACLPublicRT
      SubnetId: !Ref NACLPublicSN

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: NACLIGWAttachment
    Properties:
      RouteTableId: !Ref NACLPublicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref NACLIGW

  SecurityGroup11:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH, HTTP, ICMP
      VpcId: !Ref NACLVPC
      SecurityGroupIngress: # 인바운드규칙 <-> SecurityGroupEgress
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0

  SecurityGroup12:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH, HTTP, ICMP
      VpcId: !Ref NACLVPC
      SecurityGroupIngress: # 인바운드규칙 <-> SecurityGroupEgress
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0

  EC2InstanceWeb1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-01056eaaa603955a4 # 서울 AMI 
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
      - Key: Name
        Value: EC2InstanceWeb1
      NetworkInterfaces:
        - PrivateIpAddress: 10.0.0.10
          AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet:
            - !Ref SecurityGroup11
          SubnetId: !Ref NACLPublicSN
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum update -y
          sudo yum install -y httpd.x86_64
          sudo systemctl start httpd.service
          sudo systemctl enable httpd.service
          sudo echo "<h1>Hello World from $(hostname -f)<h1><p>CloudFront Example</p>" > /var/www/html/index.html

          echo "password!" | passwd --stdin root
          sed -i "s/^#PermitRootLogin yes/PermitRootLogin yes/g" /etc/ssh/sshd_config
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          systemctl restart sshd
  EC2InstanceWeb2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-01056eaaa603955a4 # 서울 AMI 
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
      - Key: Name
        Value: EC2InstanceWeb2
      NetworkInterfaces:
        - PrivateIpAddress: 10.0.0.20
          AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet:
            - !Ref SecurityGroup12
          SubnetId: !Ref NACLPublicSN
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum update -y
          sudo yum install -y httpd.x86_64
          sudo systemctl start httpd.service
          sudo systemctl enable httpd.service
          sudo echo "<h1>Hello World from $(hostname -f)<h1><p>NACL Example</p>" > /var/www/html/index.html

          echo "password!" | passwd --stdin root
          sed -i "s/^#PermitRootLogin yes/PermitRootLogin yes/g" /etc/ssh/sshd_config
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          systemctl restart sshd

### NACL 생성하는 방법
# 1. NACL 생성
# 2. 룰 생성
# 3. nacl과 서브넷 연결
# AWS::EC2::NetworkAcl
# AWS::EC2::NetworkAclEntry
# AWS::EC2::SubnetNetworkAclAssociation
  NACLnacl:
    Type: AWS::EC2::NetworkAcl
    Properties: 
      Tags: 
        - Key: Name
          Value: NACL-nacl
      VpcId: !Ref NACLVPC
  InboundRuleSSH: # SSH 트래픽 허용
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId: !Ref NACLnacl
       RuleNumber: 100
       Protocol: 6
       RuleAction: allow
       CidrBlock: 0.0.0.0/0 # Source
       PortRange:
         From: 22
         To: 22
  InboundRuleICMP: # ICMP 트래픽 허용
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId: !Ref NACLnacl
       RuleNumber: 200
       Protocol: 1
       RuleAction: allow
       CidrBlock: 0.0.0.0/0 # Source
       Icmp: 
        Code: -1
        Type: -1
  OutboundRule: # 모든 아웃바운드 트래픽 허용
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId: !Ref NACLnacl
       RuleNumber: 100
       Protocol: -1 # 모든 프로토콜
       Egress: true
       RuleAction: allow
       CidrBlock: 0.0.0.0/0 # Destination
  NACLSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref NACLPublicSN
      NetworkAclId: !Ref NACLnacl