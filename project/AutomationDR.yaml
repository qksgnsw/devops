Parameters:
  ProjectName:
    Type: String
    Description: Here is Project Name. It will use to identifier.
    Default: Project1

Resources:
  CloudFormationUpdateRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CloudFormationUpdateRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudFormationUpdatePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:UpdateStack
                  - cloudformation:DescribeStacks
                  - s3:Get*
                  - ssm:Get*
                  - ec2:*
                  - autoscaling:*
                  - elasticloadbalancing:*
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  updateActiveLambdaFn:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: updateActiveLambdaFn
      Runtime: nodejs14.x
      Role: !GetAtt CloudFormationUpdateRole.Arn
      Handler: index.handler
      Timeout: 300
      Code:
        ZipFile: |
          const AWS = require('aws-sdk');

          exports.handler = async (event, context) => {
            try {
              const targetRegion = "타겟 리전"
              const stackName = "배포시 스택 이름"
              const s3Url = "S3 템플릿 저장소 주소"
              const cfn = new AWS.CloudFormation({ region: targetRegion });

              // 스택 업데이트 실행
              const updateParams = {
                StackName: stackName,
                // S3에 저장된 cloudformation template.
                TemplateURL: s3Url,
                UsePreviousTemplate: false,  // 템플릿 변경 여부
                Parameters: [
                  {
                    ParameterKey: "deploymentOption",
                    ParameterValue: "active"
                  }
                ]
              };
              await cfn.updateStack(updateParams).promise();
              // 업데이트 완료를 기다린 후 응답
              await cfn.waitFor('stackUpdateComplete', { StackName: stackName }).promise();
              return {
                Status: 'SUCCESS',
                PhysicalResourceId: 'CustomResourcePhysicalID',
              };
            } catch (error) {
              console.error('Error:', error);
              return {
                Status: 'FAILED',
                PhysicalResourceId: 'CustomResourcePhysicalID',
              };
            }
          };
      TracingConfig:
        Mode: Active

  SNSInvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt updateActiveLambdaFn.Arn
      Principal: sns.amazonaws.com
      # SourceArn: YourSNSTopicArn

  DrSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub ${ProjectName}-Dr
    
  DrSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      TopicArn: !Ref DrSNSTopic
      Endpoint: !GetAtt updateActiveLambdaFn.Arn

  ALB5xxErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${ProjectName}-ALB5xxErrorRateAlarm
      AlarmDescription: !Sub ${ProjectName}-ALB 5xx Error Rate Alarm
      Namespace: AWS/ApplicationELB
      MetricName: HTTPCode_ELB_5XX_Count  # 5XX 오류 카운트 모니터링 (오류 코드에 따라 조정 가능)
      Dimensions:
        - Name: LoadBalancer
          Value: 
            Fn::ImportValue: !Sub ${ProjectName}-alb-name # 로드 밸런서 이름으로 변경
      EvaluationPeriods: 1
      Period: 60  # 평가 주기 (초)
      Statistic: Sum
      Threshold: 1  # 1 이상의 5xx 에러가 발생하면 경보
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref DrSNSTopic  # 경보 발생 시 알림을 보낼 SNS 주제

  ALBLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${ProjectName}-ALBLatencyAlarm
      AlarmDescription: !Sub ${ProjectName}-ALB Latency Alarm
      Namespace: AWS/ApplicationELB
      MetricName: TargetResponseTime  # 대상 응답 시간 모니터링
      Dimensions:
        - Name: LoadBalancer
          Value: 
            Fn::ImportValue: !Sub ${ProjectName}-alb-name # 로드 밸런서 이름으로 변경
      Statistic: Average
      Period: 60
      Threshold: 0.5  # 0.5초 이상의 평균 응답 시간이 발생하면 경보
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Ref DrSNSTopic  # 경보 발생 시 알림을 보낼 SNS 주제
